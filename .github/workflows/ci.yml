# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3
  PROJECT_NAME: "caskade"

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        os: [ubuntu-latest, windows-latest, macOS-latest]
        backend: [torch, numpy, jax, object]
    
    name: Python ${{ matrix.python-version }} - OS ${{ matrix.os }} - Backend ${{ matrix.backend }}

    steps:
      - name: Checkout caskade
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

      - name: Record State
        run: |
          pwd
          echo github.ref is: ${{ github.ref }}
          echo GITHUB_SHA is: $GITHUB_SHA
          echo github.event_name is: ${{ github.event_name }}
          echo github workspace: ${{ github.workspace }}
          pip --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov torch wheel pydantic

      # We only want to install this on one run, because otherwise we'll have
      # duplicate annotations.
      - name: Install error reporter
        if: ${{ matrix.python-version == '3.10' }}
        run: |
          python -m pip install pytest-github-actions-annotate-failures

      - name: Install caskade
        run: |
          pip install -e ".[dev,${{ matrix.backend }}]"
          pip show ${{ env.PROJECT_NAME }}
          export JAX_ENABLE_X64=True
        shell: bash

      - name: Test with pytest
        run: |
          echo "Running tests for backend: ${{ matrix.backend }}"
          coverage run --source=${{ env.PROJECT_NAME }} -m pytest tests/
          ls -a
          cat .coverage
        shell: bash
        env:
          CASKADE_BACKEND: ${{ matrix.backend }}

      - name: Extra coverage report for object checks
        if:
            ${{ matrix.python-version == '3.10' && matrix.os == 'ubuntu-latest' && matrix.backend == 'torch' }}
        run: |
          echo "Running extra coverage report for object checks"
          coverage run --append --source=${{ env.PROJECT_NAME }} -m pytest tests/
        shell: bash
        env:
          CASKADE_BACKEND: object
      - name: Extra coverage report for jax checks
        if:
            ${{ matrix.python-version == '3.10' && matrix.os == 'ubuntu-latest' && matrix.backend == 'torch' }}
        run: |
          echo "Running extra coverage report for jax checks"
          pip install jax jaxlib
          coverage run --append --source=${{ env.PROJECT_NAME }} -m pytest tests/
        shell: bash
        env:
          CASKADE_BACKEND: jax
      - name: Extra coverage report for numpy checks
        if:
            ${{ matrix.python-version == '3.10' && matrix.os == 'ubuntu-latest' && matrix.backend == 'torch' }}
        run: |
          echo "Running extra coverage report for numpy checks"
          coverage run --append --source=${{ env.PROJECT_NAME }} -m pytest tests/
          ls -a
          cat .coverage
          coverage report -m
          coverage xml
          coverage report -m
        shell: bash
        env:
          CASKADE_BACKEND: numpy
      - name: Upload coverage reports to Codecov with GitHub Action
        if:
          ${{ matrix.python-version == '3.10' && matrix.os == 'ubuntu-latest' && matrix.backend == 'torch' }}
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
